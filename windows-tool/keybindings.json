[
	{
		"key": "ctrl+`",
		"command": "workbench.action.terminal.focus"
	},
	{
		"key": "ctrl+q",
		"command": "workbench.action.closePanel"
	},
	{
		"key": "ctrl+q",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+r",
		"command": "editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+/",
		"command": "workbench.action.openRecent"
	},
	{
		"key": "ctrl+d",
		"command": "editor.action.deleteLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+e",
		"command": "editor.action.addSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "f3",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalFocus"
	},
	{
		"key": "f2",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+.",
		"command": "workbench.action.navigateForward"
	},
	{
		"key": "ctrl+,",
		"command": "workbench.action.navigateBack"
	},
	{
		"key": "ctrl+f7",
		"command": "editor.action.goToDeclaration",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "f7",
		"command": "editor.action.peekDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "alt+v",
		"command": "editor.action.peekDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+alt+v",
		"command": "editor.action.goToDeclaration",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+k ctrl+l",
		"command": "editor.action.clearoutput"
	},
	{
		"key": "ctrl+alt+p",
		"command": "workbench.action.files.copyPathOfActiveFile"
	},
	{
		"key": "ctrl+k p",
		"command": "-workbench.action.files.copyPathOfActiveFile"
	},
	{
		"key": "ctrl+shift+r",
		"command": "workbench.action.files.revealActiveFileInWindows"
	},
	{
		"key": "f2",
		"command": "editor.action.previousMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+alt+,",
		"command": "workbench.action.openGlobalSettings"
	},
	{
		"key": "f3",
		"command": "editor.action.nextSelectionMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+f3",
		"command": "editor.action.nextMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "f4",
		"command": "editor.action.nextMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "f2",
		"command": "editor.action.previousSelectionMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+f2",
		"command": "editor.action.previousMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+p",
		"command": "workbench.files.action.compareFileWith"
	},
	{
		"key": "shift+alt+up",
		"command": "editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+down",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+alt+\\",
		"command": "editor.action.selectToBracket",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+v",
		"command": "markdown.showPreviewToSide",
		"when": "editorLangId == 'markdown'"
	},
	{
		"key": "alt+d",
		"command": "markdown.showPreviewToSide",
		"when": "editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+alt+v",
		"command": "markdown.showPreview",
		"when": "editorLangId == 'markdown'"
	},
	{
		"key": "alt+d",
		"command": "html.showPreviewToSide",
		"when": "editorLangId == 'html'"
	},
	{
		"key": "ctrl+alt+v",
		"command": "html.showPreview",
		"when": "editorLangId == 'html'"
	},
	{
		"key": "ctrl+k ctrl+z",
		"command": "markdown.showPreview",
		"when": "editorLangId == 'markdown'"
	},
	{
		"key": "alt+down",
		"command": "workbench.action.compareEditor.nextChange",
		"when": "textCompareEditorVisible"
	},
	{
		"key": "alt+up",
		"command": "workbench.action.compareEditor.previousChange",
		"when": "textCompareEditorVisible"
	},
	{
		"key": "ctrl+shift+'",
		"command": "breadcrumbs.toggle"
	},
	{
		"key": "ctrl+l",
		"command": "workbench.action.editor.changeLanguageMode"
	},
	{
		"key": "ctrl+shift+b",
		"command": "markdown.extension.editing.toggleBold",
		"when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+b",
		"command": "-markdown.extension.editing.toggleBold",
		"when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+m ctrl+p",
		"command": "svn.openChangePrev",
		"when": "config.svn.enabled && svnOpenRepositoryCount != 0"
	},
	{
		"key": "ctrl+m",
		"command": "-editor.action.toggleTabFocusMode"
	},
	{
		"key": "ctrl+m ctrl+b",
		"command": "svn.openChangeBase",
		"when": "config.svn.enabled && svnOpenRepositoryCount != 0"
	},
	{
		"key": "ctrl+m ctrl+i",
		"command": "svn.commit",
		"when": "config.svn.enabled && svnOpenRepositoryCount != 0"
	},
	{
		"key": "ctrl+m ctrl+l",
		"command": "svn.log",
		"when": "config.svn.enabled && svnOpenRepositoryCount != 0"
	},
	{
		"key": "ctrl+m ctrl+o",
		"command": "svn.update",
		"when": "config.svn.enabled && svnOpenRepositoryCount != 0"
	},
	{
		"key": "ctrl+-",
		"command": "workbench.action.zoomOut"
	},
	{
		"key": "ctrl+-",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "ctrl+shift+=",
		"command": "editor.action.fontZoomIn"
	},
	{
		"key": "ctrl+=",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+shift+-",
		"command": "-workbench.action.navigateForward"
	},
	{
		"key": "ctrl+shift+-",
		"command": "editor.action.fontZoomOut"
	},
	{
		"key": "ctrl+shift+0",
		"command": "editor.action.fontZoomReset"
	},
	{
		"key": "ctrl+=",
		"command": "workbench.action.zoomIn"
	},
	{
		"key": "ctrl+shift+=",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+0",
		"command": "workbench.action.zoomReset"
	},
	{
		"key": "ctrl+numpad0",
		"command": "-workbench.action.zoomReset"
	},
	{
		"key": "ctrl+0",
		"command": "-workbench.action.focusSideBar"
	},
	{
		"key": "ctrl+alt+e",
		"command": "extension.calculate"
	},
	{
		"key": "ctrl+shift+alt+e",
		"command": "extension.calculateReplace"
	},
	{
        "key": "ctrl+alt+oem_3",
        "command": "workbench.action.positionPanelRight",
        "when": "panelPosition == 'bottom'"
    },
    {
        "key": "ctrl+alt+oem_3",
        "command": "workbench.action.positionPanelBottom",
        "when": "panelPosition == 'right'"
    },
	{
		"when": "config.svn.enabled && svnOpenRepositoryCount != 0"
	},
	{
		"key": "ctrl+alt+d",
		"command": "extension.partialDiff.diffSelectionWithClipboard"
	},
	{
		"key": "ctrl+j ctrl+tab",
		"command": "editor.action.indentationToTabs"
	},
	{
		"key": "ctrl+alt+s",
		"command": "workbench.action.files.saveAs"
	},
	{
		"key": "ctrl+alt+s",
		"command": "hexdump.exportToFile",
		"when": "editorLangId == 'hexdump'"
	},
	{
		"key": "ctrl+shift+s",
		"command": "workbench.view.extension.svnActivity",
		"when": "config.svn.enabled && svnOpenRepositoryCount != 0"
	},
	{
		"key": "ctrl+alt+shift+[",
		"command": "editor.foldAll",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+shift+]",
		"command": "editor.unfoldAll",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+alt+a",
		"command": "editor.action.changeAll",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+f2",
		"command": "-editor.action.changeAll",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+a",
		"command": "workbench.action.terminal.selectAll",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+alt+c",
		"command": "copyFilePath"
	},
	{
		"key": "ctrl+alt+c",
		"command": "-copyFilePath",
		"when": "!editorFocus"
	},
	{
		"key": "ctrl+j ctrl+e",
		"command": "extension.filterTextInplace",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+f",
		"command": "-extension.filterTextInplace",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+j ctrl+k",
		"command": "textPowerTools.filterLinesMatchingRegexToNewEditor"
	},
	{
		"key": "ctrl+j ctrl+l",
		"command": "textPowerTools.filterLinesNotMatchingRegexToNewEditor"
	},
	{
		"key": "ctrl+j ctrl+i",
		"command": "textPowerTools.filterLinesIncludingStringToNewEditor"
	},
	{
		"key": "ctrl+j ctrl+o",
		"command": "textPowerTools.filterLinesNotIncludingStringToNewEditor"
	},
	{
		"key": "ctrl+j ctrl+j",
		"command": "workbench.action.togglePanel"
	},
	{
		"key": "ctrl+j",
		"command": "-workbench.action.togglePanel"
	},
	{
		"key": "shift+f3",
		"command": "workbench.action.terminal.findPreviousTerminalFocus",
		"when": "terminalFocus"
	},
	{
		"key": "shift+f3",
		"command": "-workbench.action.terminal.findPreviousTerminalFocus",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+alt+left",
		"command": "-workbench.action.moveEditorToPreviousGroup"
	},
	{
		"key": "ctrl+alt+3",
		"command": "workbench.action.moveEditorToNextGroup"
	},
	{
		"key": "ctrl+alt+right",
		"command": "-workbench.action.moveEditorToNextGroup"
	},
	{
		"key": "shift+alt+9",
		"command": "-workbench.action.moveEditorToLastGroup"
	},
	{
		"key": "shift+alt+1",
		"command": "-workbench.action.moveEditorToFirstGroup"
	},
	{
		"key": "ctrl+alt+2",
		"command": "workbench.action.moveEditorToPreviousGroup"
	},
	{
		"key": "shift+alt+s",
		"command": "workbench.action.moveEditorToBelowGroup"
	},
	{
		"key": "shift+alt+w",
		"command": "workbench.action.moveEditorToAboveGroup"
	},
	{
		"key": "shift+alt+d",
		"command": "workbench.action.moveEditorToRightGroup"
	},
	{
		"key": "shift+alt+a",
		"command": "workbench.action.moveEditorToLeftGroup"
	},
	{
		"key": "shift+alt+n",
		"command": "editor.action.insertCursorAtEndOfEachLineSelected",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+i",
		"command": "-editor.action.insertCursorAtEndOfEachLineSelected",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+;",
		"command": "cursorEnd",
		"when": "textInputFocus"
	},
	{
		"key": "alt+;",
		"command": "cursorEnd",
		"when": "textInputFocus"
	},
	{
		"key": "alt+h",
		"command": "cursorHome",
		"when": "textInputFocus"
	},
	{
		"key": "alt+shift+h",
		"command": "cursorHomeSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+shift+j",
		"command": "cursorHomeSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+;",
		"command": "-breadcrumbs.focus",
		"when": "breadcrumbsPossible"
	},
	{
		"key": "alt+'",
		"command": "breadcrumbs.focus"
	},
	{
		"key": "ctrl+alt+;",
		"command": "cursorEndSelect",
		"when": "textInputFocus"
	},
	{
		"key": "alt+shift+;",
		"command": "cursorEndSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+shift+l",
		"command": "cursorEndSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+;",
		"command": "cursorEndSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+i",
		"command": "cursorTop",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+k",
		"command": "cursorBottom",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+l",
		"command": "cursorEnd",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+j",
		"command": "cursorHome",
		"when": "textInputFocus"
	},
	{
		"key": "alt+i",
		"command": "cursorUp",
		"when": "textInputFocus"
	},
	{
		"key": "alt+k",
		"command": "cursorDown",
		"when": "textInputFocus"
	},
	{
		"key": "alt+l",
		"command": "cursorRight",
		"when": "textInputFocus"
	},
	{
		"key": "alt+j",
		"command": "cursorLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+l",
		"command": "workbench.action.terminal.clear",
		"when": "terminalFocus"
	},
	{
		"key": "shift+alt+j",
		"command": "code-runner.runByLanguage"
	},
	{
		"key": "ctrl+alt+j",
		"command": "-code-runner.runByLanguage"
	},
	{
		"key": "shift+alt+k",
		"command": "code-runner.runCustomCommand"
	},
	{
		"key": "ctrl+alt+k",
		"command": "-code-runner.runCustomCommand"
	},
	{
		"key": "ctrl+shift+alt+d",
		"command": "extension.downloadSettings"
	},
	{
		"key": "shift+alt+d",
		"command": "-extension.downloadSettings"
	},
	{
		"key": "ctrl+shift+alt+u",
		"command": "extension.updateSettings"
	},
	{
		"key": "shift+alt+u",
		"command": "-extension.updateSettings"
	},
	{
		"key": "ctrl+alt+shift+k",
		"command": "cursorBottomSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+shift+i",
		"command": "cursorTopSelect",
		"when": "textInputFocus"
	},
	{
		"key": "alt+shift+k",
		"command": "cursorDownSelect",
		"when": "textInputFocus"
	},
	{
		"key": "alt+shift+i",
		"command": "cursorUpSelect",
		"when": "textInputFocus"
	},
	{
		"key": "alt+shift+l",
		"command": "cursorRightSelect",
		"when": "textInputFocus"
	},
	{
		"key": "alt+shift+j",
		"command": "cursorLeftSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+t",
		"command": "markdown.generateTable",
		"when": "editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+m ctrl+s",
		"command": "extension.blameFile",
		"when": "editorTextFocus && config.svn.enabled && svnOpenRepositoryCount != 0"
	},
	{
		"key": "ctrl+alt+d",
		"command": "-extension.blameFile",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+m ctrl+c",
		"command": "extension.clearBlame",
		"when": "config.svn.enabled && svnOpenRepositoryCount != 0"
	},
	{
		"key": "ctrl+alt+h",
		"command": "hexdump.hexdumpFile"
	},
	{
		"key": "ctrl+alt+r",
		"command": "-terminal.run"
	},
	{
		"key": "ctrl+shift+s",
		"command": "workbench.view.extension.gitlens",
		"when": "gitlens:enabled"
	},
	{
		"key": "alt+s",
		"command": "plantuml.exportDocument",
		"when": "editorLangId == 'diagram'"
	},
	{
		"key": "alt+d",
		"command": "plantuml.preview",
		"when": "editorLangId == 'diagram'"
	},
	{
		"key": "alt+d",
		"command": "-plantuml.preview"
	},
	{
		"key": "ctrl+m ctrl+l",
		"command": "git.viewHistory",
		"when": "gitlens:enabled"
	},
	{
		"key": "ctrl+m ctrl+.",
		"command": "gitlens.toggleLineBlame",
		"when": "gitlens:enabled"
	},
	{
		"key": "ctrl+m ctrl+,",
		"command": "gitlens.toggleFileBlame",
		"when": "gitlens:enabled"
	},
	{
		"key": "ctrl+m ctrl+s",
		"command": "git.stage",
		"when": "gitlens:enabled"
	},
	{
		"key": "ctrl+m ctrl+k",
		"command": "git.stage",
		"when": "gitlens:enabled"
	},
	{
		"key": "ctrl+m ctrl+i",
		"command": "git.commit",
		"when": "gitlens:enabled"
	},
	{
		"key": "ctrl+m ctrl+h",
		"command": "gitlens.externalDiff",
		"when": "gitlens:enabled"
	},
	{
		"key": "ctrl+m ctrl+f",
		"command": "git.viewFileHistory"
	},
	{
		"key": "ctrl+m ctrl+r",
		"command": "git.viewLineHistory"
	},
	{
		"key": "ctrl+m ctrl+p",
		"command": "gitlens.diffWithPrevious",
		"when": "gitlens:enabled"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.diffWithPrevious",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+m",
		"command": "editor.action.toggleMinimap"
	},
	{
		"key": "ctrl+alt+f",
		"command": "workbench.action.toggleMaximizedPanel",
		"when": "editorLangId != 'hexdump'"
    },
    {
        "key": "ctrl+k ctrl+space",
        "command": "editor.action.indentUsingSpaces"
    },
    {
        "key": "ctrl+k ctrl+tab",
        "command": "editor.action.indentUsingTabs"
	},
	{
		"key": "ctrl+j ctrl+space",
		"command": "editor.action.indentationToSpaces"
	},
	{
		"key": "ctrl+alt+1",
		"command": "editor.emmet.action.incrementNumberByOne"
	},
	{
		"key": "shift+alt+f10",
		"command": "editor.action.showContextMenu",
		"when": "textInputFocus"
	},
	{
		"key": "shift+f10",
		"command": "-editor.action.showContextMenu",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+j",
		"command": "workbench.view.extension.json-views",
		"when": "editorLangId == 'json'"
	},
	{
		"key": "ctrl+j ctrl+f",
		"command": "editor.printFunctions"
	},
	{
		"key": "ctrl+'",
		"command": "breadcrumbs.toggleToOn",
		"when": "config.breadcrumbs.enabled"
	},
	{
		"key": "ctrl+t f",
		"command": "-textPowerTools.filterLinesIncludingString",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+t g",
		"command": "-textPowerTools.generateGuid",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+r",
		"command": "-shell.runCommand"
	},
	{
		"key": "ctrl+shift+alt+=",
		"command": "glassit.decrease"
	},
	{
		"key": "ctrl+alt+c",
		"command": "-glassit.decrease"
	},
	{
		"key": "ctrl+shift+alt+-",
		"command": "glassit.increase"
	},
	{
		"key": "ctrl+alt+z",
		"command": "-glassit.increase"
	},
	{
		"key": "ctrl+alt+backspace",
		"command": "editor.action.trimTrailingWhitespace",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+backspace",
		"command": "editor.action.trimTrailingWhitespace",
		"when": "editorTextFocus && !editorReadonly && !inSearchEditor"
	},
	{
		"key": "ctrl+shift+v",
		"command": "workbench.view.extension.leetcode",
		"when": "!terminalFocus",
	},
	{
		"key": "ctrl+t",
		"command": "workbench.action.showAllSymbols"
	},
	{
		"key": "ctrl+t",
		"command": "-workbench.action.showAllSymbols"
	},
	{
		"key": "ctrl+shift+m",
		"command": "-workbench.actions.view.problems"
	},
	{
		"key": "ctrl+j ctrl+1",
		"command": "workbench.action.problems.focus"
	},
	{
		"key": "ctrl+j ctrl+2",
		"command": "workbench.panel.output.focus"
	},
	{
		"key": "ctrl+shift+y",
		"command": "-workbench.debug.action.toggleRepl",
		"when": "debuggersAvailable"
	},
	{
		"key": "ctrl+j ctrl+4",
		"command": "workbench.action.terminal.focus"
	},
	{
		"key": "ctrl+alt+d",
		"command": "workbench.debug.action.focusRepl"
	},
	{
		"key": "ctrl+shift+g g",
		"command": "-workbench.view.scm",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+shift+g",
		"command": "workbench.scm.repositories.focus"
	},
	{
		"key": "alt+a",
		"command": "editor.action.transformToUppercase"
	},
	{
		"key": "alt+s",
		"command": "editor.action.transformToLowercase"
	},
	{
		"key": "alt+f",
		"command": "editor.action.transformToTitlecase"
	},
	{
		"key": "alt+q",
		"command": "toggle.diff.renderSideBySide"
	},
	{
		"key": "alt+down",
		"command": "editor.debug.action.goToNextBreakpoint",
		"when": "inDebugMode"
	},
	{
		"key": "alt+up",
		"command": "editor.debug.action.goToPreviousBreakpoint",
		"when": "inDebugMode"
	},
	{
		"key": "ctrl+shift+alt+f9",
		"command": "workbench.debug.viewlet.action.removeAllBreakpoints"
	},
	{
		"key": "ctrl+f9",
		"command": "workbench.debug.viewlet.action.toggleBreakpointsActivatedAction"
	},
	{
		"key": "shift+alt+f9",
		"command": "workbench.debug.viewlet.action.disableAllBreakpoints"
	},
	{
		"key": "ctrl+shift+f9",
		"command": "workbench.debug.viewlet.action.enableAllBreakpoints"
	},
	{
		"key": "ctrl+shift+up",
		"command": "editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+up",
		"command": "-editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+down",
		"command": "editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+down",
		"command": "-editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+a",
		"command": "editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+a",
		"command": "-editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+d",
		"command": "markdown-preview-enhanced.openPreviewToTheSide",
		"when": "editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+k v",
		"command": "-markdown-preview-enhanced.openPreviewToTheSide",
		"when": "editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+shift+r",
		"command": "remote-wsl.revealInExplorer",
		"when": "editorFocus && remoteName == 'wsl'"
	},
	{
		"key": "shift+alt+r",
		"command": "-remote-wsl.revealInExplorer",
		"when": "editorFocus && remoteName == 'wsl'"
	},
	{
		"key": "ctrl+j ctrl+3",
		"command": "workbench.panel.repl.view.focus"
	},
	{
		"key": "shift+alt+c",
		"command": "textPowerTools.changeCaseToCamelCase"
	},
	{
		"key": "ctrl+alt+r",
		"command": "editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "f2",
		"command": "-editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+f",
		"command": "editor.action.formatDocument",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
	},
	{
		"key": "ctrl+shift+i",
		"command": "-editor.action.formatDocument",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.reloadWindow",
		"when": "isDevelopment"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "-workbench.action.keybindingsReference"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "workbench.action.reloadWindow"
	},
	{
		"key": "ctrl+shift+oem_3",
		"command": "workbench.action.terminal.new",
		"when": "terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+`",
		"command": "-workbench.action.terminal.new",
		"when": "terminalProcessSupported"
	},
	{
		"key": "f5",
		"command": "workbench.action.debug.pause",
		"when": "debugState == 'running'"
	},
	{
		"key": "f6",
		"command": "-workbench.action.debug.pause",
		"when": "debugState == 'running'"
	},
	{
		"key": "f6",
		"command": "workbench.action.debug.stepOver",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "ctrl+shift+r",
		"command": "-shell.runCommandAtFileLocation"
	},
	{
		"key": "ctrl+k ctrl+m",
		"command": "workbench.action.closeEditorsInOtherGroups"
	},
	{
		"key": "ctrl+k ctrl+n",
		"command": "workbench.action.closeOtherEditors"
	},
	{
		"key": "ctrl+m ctrl+4",
		"command": "merge-conflict.next"
	},
	{
		"key": "ctrl+m ctrl+3",
		"command": "merge-conflict.previous"
	},
	{
		"key": "ctrl+m ctrl+1",
		"command": "merge-conflict.accept.current"
	},
	{
		"key": "ctrl+m ctrl+2",
		"command": "merge-conflict.accept.incoming"
	},
	{
		"key": "ctrl+m ctrl+0",
		"command": "merge-conflict.accept.both"
	},
	{
		"key": "shift+alt+f",
		"command": "extension.parseJson",
		"when": "editorLangId == 'json'"
	},
	{
		"key": "ctrl+shift+alt+s",
		"command": "workbench.action.files.saveAll"
	},
	{
		"key": "ctrl+e ctrl+e",
		"command": "-sqltools.executeQuery",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "sqltools.executeCurrentQuery",
		"when": "editorLangId == 'sql'"
	},
	{
		"key": "ctrl+shift+q",
		"command": "workbench.view.extension.sqltoolsActivityBarContainer"
	},
	{
		"key": "ctrl+k ctrl+g",
		"command": "go.languageserver.restart"
	},
	{
		"key": "ctrl+j ctrl+d",
		"command": "editor.action.removeDuplicateLines"
	}
]